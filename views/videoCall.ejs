<!-- <!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>

    <script>
      // socket implementation 4 starts
      var socket = io();
      console.log('socket',socket);
      socket.emit('connection');
      // socket implementation 4 ends
    </script>
  </body>
</html> -->

<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link type="image/x-icon" href="/images/favicon.ico" rel="shortcut icon" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel='stylesheet' href='/stylesheets/style.css' />

    <script>
        const ROOM_ID = '<%- room_id %>';
        console.log('ROOM_ID', ROOM_ID);
    </script>

    <style>
        #video-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, 300px);
            grid-template-columns: 300px;
        }

        video {
            width: 100%;
            height: 100%;
        }
    </style>
  </head>
  <body>
    <div class="container">

        <div id="video-grid"></div>

        <!-- <div id="video-grid" class="row">
            <div class="col-lg video">
                Col1
            </div>

            <div class="col-lg video">
                Col1
            </div>


            <div class="col-lg video">
                Col1
            </div>
        </div> -->
      
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>

    <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>

    <script>
    // socket implementation 4 starts
    var socket = io();
    let user_id = localStorage.getItem( 'user_id' );
    const myPeer = new Peer(undefined, {
        host: '/',
        port: '3001'
    });

    myPeer.on('open', (id) => {
        socket.emit('join-room', ROOM_ID, id);
        let data = {
            room_id: ROOM_ID,
            user_id: id
        };
        socket.emit('join-video-chat-room', data );
    });

    console.log('socket',socket);

    // socket implementation 4 ends


    const videoGrid = document.getElementById('video-grid');

    const myVideo = document.createElement('video');
    myVideo.muted = true;

    navigator.mediaDevices.getUserMedia({
        video: true,
        audio: true
    })
    .then( (stream) => {
        addVideoStream( myVideo, stream );

        myPeer.on('call', (call) => {
            call.answer(stream);
            const video = document.createElement('video');

            call.on('stream', (userVideoStream) => {
                addVideoStream(video, userVideoStream);
            });
        });

        socket.on( 'new-user-connected-to-video-chat', ( data ) => {
            console.log('new-user-connected-to-video-chat data', data.user_id );

            let user_id = data.user_id;
            connectToNewUser( user_id, stream );
        } );
    } );

    function addVideoStream( video, stream ) {
        video.srcObject = stream;
        video.addEventListener('loadedmetadata', () => {
            video.play();
        });

        videoGrid.append(video);
    }

    function connectToNewUser( user_id, stream ) {
        const call = myPeer.call(user_id, stream);
        const video = document.createElement('video');

        call.on( 'stream', ( userVideoStream ) => {
            addVideoStream( video, userVideoStream );
        } );

        call.on( 'close', () => {
            video.remove();
        } );
    }

    </script>
  </body>
</html>